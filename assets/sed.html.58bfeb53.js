import{e as t}from"./app.7d274c27.js";import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";const e={},s=t(`<h1 id="sed" tabindex="-1"><a class="header-anchor" href="#sed" aria-hidden="true">#</a> sed</h1><p><code>sed [-e &lt;script&gt;][-f &lt;file&gt;] text</code></p><h2 id="script" tabindex="-1"><a class="header-anchor" href="#script" aria-hidden="true">#</a> script</h2><p>\u811A\u672C\u7EC4\u6210 <code>addr|cmd</code> <code>|</code>\u4EC5\u7528\u4E8E\u533A\u5206\u5B57\u6BB5</p><h3 id="addr" tabindex="-1"><a class="header-anchor" href="#addr" aria-hidden="true">#</a> addr</h3><table><thead><tr><th style="text-align:center;">\u5730\u5740\u8868\u793A\u6CD5</th><th style="text-align:center;">\u529F\u80FD</th></tr></thead><tbody><tr><td style="text-align:center;">n</td><td style="text-align:center;">\u6B63\u6574\u6570\u884C\u53F7</td></tr><tr><td style="text-align:center;">$</td><td style="text-align:center;">\u6700\u540E\u4E00\u884C</td></tr><tr><td style="text-align:center;">/regexp/</td><td style="text-align:center;">POSIX\u6B63\u5219 \u659C\u7EBF\u5206\u9694 \u53EF\u4EE5\u7528<code>\\cregexpc</code> \u9009\u9879\u6307\u5B9A[c \u4E3A\u5206\u754C\u7B26]</td></tr><tr><td style="text-align:center;">begin,end</td><td style="text-align:center;">[begin,end]</td></tr><tr><td style="text-align:center;">addr,+n</td><td style="text-align:center;">[addr,addr+n]</td></tr><tr><td style="text-align:center;">begin~step</td><td style="text-align:center;">begin with <strong>first</strong> with the gap of <strong>step</strong></td></tr><tr><td style="text-align:center;">addr!</td><td style="text-align:center;">except addr</td></tr><tr><td style="text-align:center;">/pattern/,n</td><td style="text-align:center;">\u884C\u53F7\u548C\u6A21\u5F0F\u53CC\u5339\u914D</td></tr><tr><td style="text-align:center;">n,/pattern/</td><td style="text-align:center;">\u540C\u4E0A</td></tr><tr><td style="text-align:center;">x,y!</td><td style="text-align:center;">\u4E0D\u5305\u62EC x \u5230 y \u884C</td></tr></tbody></table><h3 id="cmd" tabindex="-1"><a class="header-anchor" href="#cmd" aria-hidden="true">#</a> cmd</h3><table><thead><tr><th style="text-align:center;">\u547D\u4EE4</th><th>\u529F\u80FD</th></tr></thead><tbody><tr><td style="text-align:center;">s/regexp/replacement/(gi)</td><td>\u66FF\u6362 replacement \u53EF\u542B <code>&amp;</code> \u4EE3\u8868 regexp\u5185\u5BB9 \u5206\u9694\u7B26\u4E3As\u540E\u4E00\u4E2A\u7B26\u53F7</td></tr><tr><td style="text-align:center;">c</td><td>\u4FEE\u6539/\u66FF\u6362\u6587\u672C(\u53EF\u4EE5\u540E\u9762\u76F4\u63A5\u63A5\u5B57\u4E32)</td></tr><tr><td style="text-align:center;">a</td><td>\u5728\u5F53\u524D\u884C\u540E\u9644\u52A0\u6587\u672C(\u53EF\u4EE5\u540E\u9762\u76F4\u63A5\u63A5\u5B57\u4E32)</td></tr><tr><td style="text-align:center;">i</td><td>\u5728\u5F53\u524D\u884C\u524D\u63D2\u5165\u6587\u672C(\u53EF\u4EE5\u540E\u9762\u76F4\u63A5\u63A5\u5B57\u4E32)</td></tr><tr><td style="text-align:center;">d</td><td>\u5220\u9664\u5F53\u524D\u884C</td></tr><tr><td style="text-align:center;">p</td><td>\u6253\u5370\u5F53\u524D\u884C</td></tr><tr><td style="text-align:center;">c</td><td>\u66FF\u6362\u884C</td></tr><tr><td style="text-align:center;">=</td><td>\u8F93\u51FA\u5F53\u524D\u884C\u53F7</td></tr><tr><td style="text-align:center;">y/set1/set2</td><td>\u7B49\u957F\u5B57\u7B26\u96C6\u66FF\u6362</td></tr><tr><td style="text-align:center;">q</td><td>\u7B2C\u4E00\u4E2A\u6A21\u5F0F\u5339\u914D\u540E\u7ACB\u5373\u9000\u51FA</td></tr><tr><td style="text-align:center;">w</td><td>\u5199\u5165\u6587\u4EF6</td></tr></tbody></table><h3 id="args" tabindex="-1"><a class="header-anchor" href="#args" aria-hidden="true">#</a> args</h3><table><thead><tr><th style="text-align:center;">\u53C2\u6570</th><th>\u529F\u80FD</th></tr></thead><tbody><tr><td style="text-align:center;">n</td><td>\u7981\u6B62\u81EA\u52A8\u8F93\u51FA(\u4E0D\u5173\u4F1A\u8F93\u51FA\u5168\u90E8,\u642D\u914D <code>p</code> \u4F7F\u7528)</td></tr><tr><td style="text-align:center;">e</td><td>\u6307\u51FA\u4E3A\u547D\u4EE4\u884C</td></tr><tr><td style="text-align:center;">f</td><td>\u6307\u51FA\u4E3A\u6587\u4EF6</td></tr><tr><td style="text-align:center;">i</td><td>\u539F\u5730\u4FEE\u6539</td></tr></tbody></table><h2 id="tldr" tabindex="-1"><a class="header-anchor" href="#tldr" aria-hidden="true">#</a> tldr</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Replace the first occurrence of a regular expression in each line of a file, and print the result:</span>
<span class="token function">sed</span> <span class="token string">&#39;s/{{regular_expression}}/{{replace}}/&#39;</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>filename<span class="token punctuation">}</span><span class="token punctuation">}</span>

<span class="token comment"># Replace all occurrences of an extended regular expression in a file, and print the result:</span>
<span class="token function">sed</span> -r <span class="token string">&#39;s/{{regular_expression}}/{{replace}}/g&#39;</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>filename<span class="token punctuation">}</span><span class="token punctuation">}</span>

<span class="token comment"># Replace all occurrences of a string in a file, overwriting the file (i.e. in-place):</span>
<span class="token function">sed</span> -i <span class="token string">&#39;s/{{find}}/{{replace}}/g&#39;</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>filename<span class="token punctuation">}</span><span class="token punctuation">}</span>

<span class="token comment"># Replace only on lines matching the line pattern:</span>
<span class="token function">sed</span> <span class="token string">&#39;/{{line_pattern}}/s/{{find}}/{{replace}}/&#39;</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>filename<span class="token punctuation">}</span><span class="token punctuation">}</span>

<span class="token comment"># Delete lines matching the line pattern:</span>
<span class="token function">sed</span> <span class="token string">&#39;/{{line_pattern}}/d&#39;</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>filename<span class="token punctuation">}</span><span class="token punctuation">}</span>

<span class="token comment"># Print the first 11 lines of a file:</span>
<span class="token function">sed</span> 11q <span class="token punctuation">{</span><span class="token punctuation">{</span>filename<span class="token punctuation">}</span><span class="token punctuation">}</span>

<span class="token comment"># Apply multiple find-replace expressions to a file:</span>
<span class="token function">sed</span> -e <span class="token string">&#39;s/{{find}}/{{replace}}/&#39;</span> -e <span class="token string">&#39;s/{{find}}/{{replace}}/&#39;</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>filename<span class="token punctuation">}</span><span class="token punctuation">}</span>

<span class="token comment"># Replace separator / by any other character not used in the find or replace patterns, e.g. #:</span>
<span class="token function">sed</span> <span class="token string">&#39;s#{{find}}#{{replace}}#&#39;</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>filename<span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>`,12);function a(r,l){return s}var d=n(e,[["render",a]]);export{d as default};
