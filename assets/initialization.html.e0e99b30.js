import{r as p,o,c,a as n,b as e,F as l,d as s,e as t}from"./app.7d274c27.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const i={},u=n("h1",{id:"\u521D\u59CB\u5316",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u521D\u59CB\u5316","aria-hidden":"true"},"#"),s(" \u521D\u59CB\u5316")],-1),d=n("p",null,"golang\u6CA1\u6709\u6784\u9020\u51FD\u6570 \u53D8\u91CF\u58F0\u660E\u540E\u4F1A\u96F6\u521D\u59CB\u5316(\u4E5F\u7B97\u662FRAII\u5427)",-1),m=n("p",null,"\u672C\u6587\u8BB2\u8FF0\u4E0D\u540C\u7C7B\u578B\u53D8\u91CF\u96F6\u521D\u59CB\u5316\u7684\u7ED3\u679C\u548C\u5176\u4ED6\u521D\u59CB\u5316\u64CD\u4F5C",-1),k=n("h2",{id:"\u96F6\u521D\u59CB\u5316",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u96F6\u521D\u59CB\u5316","aria-hidden":"true"},"#"),s(" \u96F6\u521D\u59CB\u5316")],-1),b={class:"custom-container tip"},h=t(`<p class="custom-container-title">\u5E38\u91CF\`const\`</p><p>golang\u7684\u5E38\u91CF\u5B58\u5728\u4E00\u79CD\u7279\u6B8A\u60C5\u51B5:\u65E0\u7C7B\u578B\u5E38\u91CF</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">const</span> <span class="token punctuation">(</span>
    e  <span class="token operator">=</span> <span class="token number">2.71828182845904523536028747135266249775724709369995957496696763</span>
    pi <span class="token operator">=</span> <span class="token number">3.14159265358979323846264338327950288419716939937510582097494459</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,3),g={href:"https://book.itsfun.top/gopl-zh/ch3/ch3-06.html",target:"_blank",rel:"noopener noreferrer"},f=s("\u81F3\u5C11\u6709256bit\u7684\u8FD0\u7B97\u7CBE\u5EA6"),_=n("p",null,"\u5B83\u53EF\u4EE5\u8D4B\u503C\u7ED9\u6709\u7C7B\u578B\u7684\u53D8\u91CF \u4E0D\u8FC7\u4F1A\u6298\u635F\u7CBE\u5EA6",-1),y=t(`<table><thead><tr><th>\u7C7B\u578B</th><th style="text-align:center;">\u521D\u59CB\u5316</th><th>\u5907\u6CE8</th></tr></thead><tbody><tr><td>\u6570\u503C\u7C7B\u578B</td><td style="text-align:center;">0</td><td>complex\u865A\u90E8\u548C\u5B9E\u90E8\u90FD\u521D\u59CB\u5316\u4E3A0</td></tr><tr><td>\u5B57\u7B26\u4E32</td><td style="text-align:center;">&quot;&quot;</td><td>\u5B57\u7B26\u4E32\u4E0D\u53EF\u53D8</td></tr><tr><td>Slice/Map/func</td><td style="text-align:center;">nil</td><td>\u53EA\u80FD\u548Cnil\u6BD4\u8F83</td></tr><tr><td>interface/channel/pointer</td><td style="text-align:center;">nil</td><td></td></tr><tr><td>struct</td><td style="text-align:center;">\u6BCF\u4E2A\u6210\u5458\u96F6\u521D\u59CB\u5316</td><td>\u6309\u8BE5\u8868\u89C4\u5219\u9012\u5F52\u521D\u59CB\u5316\u5404\u90E8\u5206</td></tr></tbody></table><h2 id="new" tabindex="-1"><a class="header-anchor" href="#new" aria-hidden="true">#</a> new</h2><p>\u4E3A\u7C7B\u578B\u5206\u914D\u7A7A\u95F4\u5E76\u8FDB\u884C\u96F6\u521D\u59CB\u5316 \u7136\u540E\u8FD4\u56DE\u8BE5\u7A7A\u95F4\u5730\u5740</p><div class="custom-container warning"><p class="custom-container-title">new \u5728 golang \u4E2D\u5E76\u4E0D\u610F\u5473\u5806\u5206\u914D</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> local <span class="token builtin">int</span>
	<span class="token keyword">var</span> nlocal <span class="token operator">=</span> <span class="token function">new</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%p,%p&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>local<span class="token punctuation">,</span> nlocal<span class="token punctuation">)</span> <span class="token comment">// 0xc0000bc000,0xc0000bc008</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u53EF\u4EE5\u53D1\u73B0\u8FD9\u91CC\u7684\u5730\u5740\u662F\u8FDE\u7EED\u7684 \u6240\u4EE5\u5E76\u4E0D\u662Fnew\u51FA\u6765\u7684\u5728\u5806\u4E0A <strong>\u53D8\u91CF\u7684\u5B58\u50A8\u5730\u5740\u7531\u7F16\u8BD1\u5668\u51B3\u5B9A</strong></p></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u65B9\u5F0F1</span>
ptr <span class="token operator">:=</span> <span class="token function">new</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span>

<span class="token comment">// \u65B9\u5F0F2</span>
<span class="token keyword">var</span> t T
ptr <span class="token operator">:=</span> <span class="token operator">&amp;</span>t
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,5),w={href:"https://www.zhihu.com/question/446317882/answer/2245768201",target:"_blank",rel:"noopener noreferrer"},v=s("\u53EF\u4EE5\u8BA4\u4E3Anew(T)\u662F var t T; &t \u7684\u8BED\u6CD5\u7CD6"),x=t(`<p>\u53CD\u6B63\u53D8\u91CF\u90FD\u4F1A\u96F6\u521D\u59CB\u5316 \u6240\u4EE5\u4E0D\u77E5\u9053new\u6709\u4EC0\u4E48\u610F\u4E49</p><h2 id="make" tabindex="-1"><a class="header-anchor" href="#make" aria-hidden="true">#</a> make</h2><p>\u6784\u9020\u540E\u5E95\u5C42\u6570\u636E\u540E\u8FD4\u56DE\u5305\u542B\u5E95\u5C42\u6570\u636E\u5730\u5740\u7684\u590D\u5408\u7ED3\u6784</p><blockquote><p>\u5177\u4F53\u884C\u4E3A\u4E0E\u4F20\u53C2\u65F6\u7684\u590D\u5236\u7C7B\u4F3C</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// The make built-in function allocates and initializes an object of type</span>
<span class="token comment">// slice, map, or chan (only). Like new, the first argument is a type, not a</span>
<span class="token comment">// value. Unlike new, make&#39;s return type is the same as the type of its</span>
<span class="token comment">// argument, not a pointer to it. The specification of the result depends on</span>
<span class="token comment">// the type:</span>
<span class="token comment">//	Slice: The size specifies the length. The capacity of the slice is</span>
<span class="token comment">//	equal to its length. A second integer argument may be provided to</span>
<span class="token comment">//	specify a different capacity; it must be no smaller than the</span>
<span class="token comment">//	length. For example, make([]int, 0, 10) allocates an underlying array</span>
<span class="token comment">//	of size 10 and returns a slice of length 0 and capacity 10 that is</span>
<span class="token comment">//	backed by this underlying array.</span>
<span class="token comment">//	Map: An empty map is allocated with enough space to hold the</span>
<span class="token comment">//	specified number of elements. The size may be omitted, in which case</span>
<span class="token comment">//	a small starting size is allocated.</span>
<span class="token comment">//	Channel: The channel&#39;s buffer is initialized with the specified</span>
<span class="token comment">//	buffer capacity. If zero, or the size is omitted, the channel is</span>
<span class="token comment">//	unbuffered.</span>
<span class="token keyword">func</span> <span class="token function">make</span><span class="token punctuation">(</span>t Type <span class="token comment">/*builtin for any type*/</span><span class="token punctuation">,</span> size <span class="token operator">...</span>IntegerType <span class="token comment">/*builtin [IntergerType Int|Uint]*/</span><span class="token punctuation">)</span> Type

<span class="token keyword">var</span> _map <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> _slice <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> _len<span class="token punctuation">,</span> _cap<span class="token punctuation">)</span>
<span class="token keyword">var</span> _chan <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> in<span class="token punctuation">,</span> _buffer<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> reference</h2>`,6),T={href:"https://sanyuesha.com/2017/07/26/go-make-and-new/",target:"_blank",rel:"noopener noreferrer"},z=s("\u7406\u89E3 Go make \u548C new \u7684\u533A\u522B");function q(I,N){const a=p("ExternalLinkIcon");return o(),c(l,null,[u,d,m,k,n("div",b,[h,n("p",null,[n("a",g,[f,e(a)])]),_]),y,n("p",null,[n("a",w,[v,e(a)])]),x,n("ul",null,[n("li",null,[n("a",T,[z,e(a)])])])],64)}var A=r(i,[["render",q]]);export{A as default};
