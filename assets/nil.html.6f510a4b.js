import{r as t,o as p,c as l,a as n,b as a,w as c,F as i,d as s,e as u}from"./app.7d274c27.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const b={},k=n("h1",{id:"nil-in-golang",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nil-in-golang","aria-hidden":"true"},"#"),s(" nil in Golang")],-1),d=s("\u5C31\u50CF\u662F\u6709\u7279\u5B9A\u7C7B\u578B\u7684"),m=n("code",null,"nullptr",-1),h=s(" \u53EF\u6BD4\u8F83\u6027\u70B9\u51FB"),_=s("\u6B64\u5904"),f=n("ol",null,[n("li",null,[n("code",null,"nil"),s(" \u4E0E "),n("code",null,"nil"),s(" \u4E0D\u53EF\u6BD4\u8F83")]),n("li",null,[s("\u4E0D\u540C\u7C7B\u578B\u7684 "),n("code",null,"nil"),s(" \u5730\u5740\u4E00\u6837")])],-1),g=n("h2",{id:"\u7C7B\u578B\u4E3A-nil-\u4E0E-\u503C\u4E3A-nil",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7C7B\u578B\u4E3A-nil-\u4E0E-\u503C\u4E3A-nil","aria-hidden":"true"},"#"),s(" \u7C7B\u578B\u4E3A nil \u4E0E \u503C\u4E3A nil")],-1),y={class:"custom-container tip"},w=n("p",{class:"custom-container-title"},"\u4E00\u4E2A\u5305\u542Bnil\u6307\u9488\u7684\u63A5\u53E3\u4E0D\u662Fnil\u63A5\u53E3",-1),x=s("\u53C2\u8003 "),v={href:"https://book.itsfun.top/gopl-zh/ch7/ch7-05.html",target:"_blank",rel:"noopener noreferrer"},q=s("https://book.itsfun.top/gopl-zh/ch7/ch7-05.html"),B=s(" 7.5.1."),L=u(`<div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> site

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;bytes&quot;</span>
	<span class="token string">&quot;io&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">const</span> debug <span class="token operator">=</span> <span class="token boolean">true</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> buf <span class="token operator">*</span>bytes<span class="token punctuation">.</span>Buffer
	<span class="token keyword">if</span> debug <span class="token punctuation">{</span>
		buf <span class="token operator">=</span> <span class="token function">new</span><span class="token punctuation">(</span>bytes<span class="token punctuation">.</span>Buffer<span class="token punctuation">)</span> <span class="token comment">// enable collection of output</span>
	<span class="token punctuation">}</span>
	<span class="token function">f</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span> <span class="token comment">// NOTE: subtly incorrect!</span>
	<span class="token keyword">if</span> debug <span class="token punctuation">{</span>
		<span class="token comment">// ...use buf...</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// If out is non-nil, output will be written to it.</span>
<span class="token keyword">func</span> <span class="token function">f</span><span class="token punctuation">(</span>out io<span class="token punctuation">.</span>Writer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// type of out : *bytes.Buffer</span>
	<span class="token comment">// value of out : nil</span>
	<span class="token keyword">if</span> out <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		out<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;done!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// panic here maybe</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>\u5BF9\u4E8E\u63A5\u53E3\u7C7B\u578B\u800C\u8A00 \u5305\u542B\u4E86\u4E24\u4E2A\u90E8\u5206:\u7C7B\u578B \u4E0E \u503C</p><p><img src="https://book.itsfun.top/gopl-zh/images/ch7-05.png" alt="nil&amp;interface"></p><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> reference</h2>`,4),N={href:"https://sanyuesha.com/2017/06/11/go-nil/",target:"_blank",rel:"noopener noreferrer"},E=s("\u7406\u89E3 Go nil");function V(z,G){const o=t("RouterLink"),e=t("ExternalLinkIcon");return p(),l(i,null,[k,n("blockquote",null,[n("p",null,[d,m,h,a(o,{to:"/handbook/GoLang/"},{default:c(()=>[_]),_:1})])]),f,g,n("div",y,[w,n("p",null,[x,n("a",v,[q,a(e)]),B])]),L,n("ul",null,[n("li",null,[n("a",N,[E,a(e)])])])],64)}var C=r(b,[["render",V]]);export{C as default};
