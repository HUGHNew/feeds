import{r as t,o,c,a as n,b as e,F as l,e as p,d as s}from"./app.7d274c27.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const u={},r=p(`<h1 id="\u57FA\u7840\u534F\u7A0B\u6982\u5FF5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u534F\u7A0B\u6982\u5FF5" aria-hidden="true">#</a> \u57FA\u7840\u534F\u7A0B\u6982\u5FF5</h1><p>\u534F\u7A0B\u662F\u53EF\u6682\u505C\u8BA1\u7B97\u7684\u4E00\u4E2A\u5B9E\u4F8B\u3002</p><blockquote><p>\u534F\u7A0B\u5728\u6982\u5FF5\u4E0A\u4E0E\u7EBF\u7A0B\u76F8\u4F3C\uFF0C\u4F46\u534F\u7A0B\u5E76\u4E0D\u7EA6\u675F\u4E8E\u4EFB\u4E00\u7EBF\u7A0B\uFF08\u53EF\u4EE5\u5728\u4E0D\u540C\u7684\u7EBF\u7A0B\u4E2D\u6302\u8D77\u548C\u5524\u9192\uFF09</p></blockquote><h2 id="\u7B2C\u4E00\u4EFD\u534F\u7A0B\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u4EFD\u534F\u7A0B\u4EE3\u7801" aria-hidden="true">#</a> \u7B2C\u4E00\u4EFD\u534F\u7A0B\u4EE3\u7801</h2><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">import</span> kotlinx<span class="token punctuation">.</span>coroutines<span class="token punctuation">.</span><span class="token operator">*</span>

<span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> runBlocking <span class="token punctuation">{</span> <span class="token comment">// this: CoroutineScope</span>
    launch <span class="token punctuation">{</span> <span class="token comment">// launch a new coroutine and continue</span>
        <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000L</span><span class="token punctuation">)</span> <span class="token comment">// non-blocking delay for 1 second (default time unit is ms)</span>
        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;World!&quot;</span></span><span class="token punctuation">)</span> <span class="token comment">// print after delay</span>
    <span class="token punctuation">}</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Hello&quot;</span></span><span class="token punctuation">)</span> <span class="token comment">// main coroutine continues while a previous one is delayed</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,5),k={href:"https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/launch.html",target:"_blank",rel:"noopener noreferrer"},d=s("launch"),b=s(" \u662F\u534F\u7A0B\u7684\u521B\u5EFA\u5668(builder) \u53EF\u4EE5\u542F\u52A8\u4E00\u4E2A\u72EC\u7ACB\u5DE5\u4F5C\u7684\u534F\u7A0B"),m={href:"https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html",target:"_blank",rel:"noopener noreferrer"},h=s("delay"),g=s(" \u662F\u4E00\u79CD\u7279\u6B8A\u7684suspend\u51FD\u6570 \u53EF\u4EE5\u6302\u8D77\u534F\u7A0B\u4F46\u4E0D\u963B\u585E\u5F53\u524D\u7EBF\u7A0B"),f={href:"https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/run-blocking.html",target:"_blank",rel:"noopener noreferrer"},_=s("runBlocking"),q=s(" \u4E5F\u662F\u534F\u7A0B\u7684builder \u7528\u4E8E\u8FDE\u63A5\u975E\u534F\u7A0B\u57DF\u548C\u534F\u7A0B\u57DF "),x=n("strong",null,[s("\u7C7B\u578B\u4E3A"),n("code",null,"CoroutineScope")],-1),v=p(`<p>runBlocking \u6784\u5EFA\u4E00\u4E2A\u963B\u585E\u5F53\u524D\u7EBF\u7A0B\u7684\u534F\u7A0B\u57DF</p><h3 id="\u7ED3\u6784\u5316\u5E76\u53D1" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u5316\u5E76\u53D1" aria-hidden="true">#</a> \u7ED3\u6784\u5316\u5E76\u53D1</h3><blockquote><p>\u534F\u7A0B\u9075\u5FAA\u7ED3\u6784\u5316\u5E76\u53D1\u7684\u539F\u5219 \u5373<strong>\u65B0\u7684\u534F\u7A0B\u53EA\u80FD\u5728\u4E00\u4E2A\u7279\u5B9A\u7684<code>CoroutineScope</code>\u4E2D\u542F\u52A8</strong></p></blockquote><h3 id="\u63D0\u53D6\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u63D0\u53D6\u51FD\u6570" aria-hidden="true">#</a> \u63D0\u53D6\u51FD\u6570</h3><p>\u5982\u4F55\u5C06launch\u5757\u4E2D\u7684\u8BED\u53E5\u63D0\u53D6\u6210\u4E00\u4E2A\u51FD\u6570\uFF1F</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">import</span> kotlinx<span class="token punctuation">.</span>coroutines<span class="token punctuation">.</span><span class="token operator">*</span>

<span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> runBlocking <span class="token punctuation">{</span> <span class="token comment">// this: CoroutineScope</span>
    launch <span class="token punctuation">{</span> <span class="token function">doWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Hello&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// this is your first suspending function</span>
<span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">doWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000L</span><span class="token punctuation">)</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;World!&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u7ED3\u5408\u4E0A\u4F8B\uFF0C\u53EF\u4EE5\u770B\u51FA\u63D0\u53D6\u51FD\u6570\u7684\u7279\u70B9 \u9700\u8981\u5728\u534F\u7A0B\u4E2D\u6267\u884C\u7684\u51FD\u6570 \u9700\u8981\u6DFB\u52A0 <code>suspend</code> \u4FEE\u9970\u7B26</p><blockquote><p>\u5728IDE\u4E2D \u53EF\u4EE5\u901A\u8FC7 <code>Extract funcion</code> \u529F\u80FD\u63D0\u53D6\u51FD\u6570</p></blockquote><p>suspend \u51FD\u6570\u8DDF\u5E38\u89C4\u51FD\u6570\u7C7B\u4F3C \u53EA\u662F\u5B83\u4EEC\u8FD8\u80FD\u8C03\u7528 suspend \u51FD\u6570(<code>suspend</code>\u51FD\u6570\u53EF\u4EE5\u76F8\u4E92\u95F4\u8C03\u7528)</p><h2 id="scope-builder" tabindex="-1"><a class="header-anchor" href="#scope-builder" aria-hidden="true">#</a> Scope builder</h2><p>\u53EF\u4EE5\u4F7F\u7528 <code>coroutineScope</code> \u58F0\u660E\u81EA\u5DF1\u7684\u534F\u7A0B\u57DF</p><p><code>coroutineScope</code> \u4F1A\u521B\u5EFA\u4E00\u4E2A\u534F\u7A0B\u57DF \u5F53\u57DF\u5185\u6240\u6709\u534F\u7A0B\u7ED3\u675F\u65F6\u5B83\u624D\u4F1A\u7ED3\u675F</p><blockquote><p><code>coroutineScope</code> \u548C <code>runBlocking</code> \u7684\u4E3B\u8981\u533A\u522B\u662F \u540E\u8005(\u5E38\u89C4\u51FD\u6570)\u4F1A\u963B\u585E\u5F53\u524D\u7EBF\u7A0B \u800C\u524D\u8005(suspend\u51FD\u6570)\u4E0D\u4F1A \u4F46\u4F1A\u6302\u8D77\u5916\u90E8\u534F\u7A0B</p></blockquote><p>\u53EF\u4EE5\u5728\u4EFB\u4F55suspend\u51FD\u6570\u4E2D\u4F7F\u7528<code>coroutineScope</code> \u53EF\u4EE5\u5C06\u4E0A\u4F8B\u6539\u4E3A\u8FD9\u6837</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> runBlocking <span class="token punctuation">{</span>
    <span class="token function">doWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">doWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> coroutineScope <span class="token punctuation">{</span>  <span class="token comment">// this: CoroutineScope</span>
    launch <span class="token punctuation">{</span>
        <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000L</span><span class="token punctuation">)</span>
        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;World!&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Hello&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="\u5E76\u53D1" tabindex="-1"><a class="header-anchor" href="#\u5E76\u53D1" aria-hidden="true">#</a> \u5E76\u53D1</h3><p><code>coroutineScope</code> \u53EF\u4EE5\u5728\u4EFB\u4F55 <code>suspend</code> \u51FD\u6570\u4E2D\u7528\u6765\u6267\u884C\u591A\u5E76\u53D1\u64CD\u4F5C \u4F8B\u5982\u4E0B\u4F8B\u4E2D\u540C\u65F6\u8FD0\u884C\u4E24\u4E2A\u534F\u7A0B</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token comment">// Concurrently executes both sections</span>
<span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">doWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> coroutineScope <span class="token punctuation">{</span> <span class="token comment">// this: CoroutineScope</span>
    launch <span class="token punctuation">{</span>
        <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000L</span><span class="token punctuation">)</span>
        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;World 2&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    launch <span class="token punctuation">{</span>
        <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000L</span><span class="token punctuation">)</span>
        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;World 1&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Hello&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u8FD9\u4E24\u4E2A\u534F\u7A0B\u4F1A\u540C\u65F6\u6267\u884C</p><h3 id="\u663E\u5F0F-job" tabindex="-1"><a class="header-anchor" href="#\u663E\u5F0F-job" aria-hidden="true">#</a> \u663E\u5F0F job</h3><p>\u4E00\u4E2A <code>launch</code> \u534F\u7A0Bbuilder \u8FD4\u56DE\u4E00\u4E2A <code>Job</code> \u5BF9\u8C61</p><p>\u8BE5\u5BF9\u8C61\u53EF\u4EE5\u5904\u7406\u8FD9\u4E2A\u5DF2\u542F\u52A8\u7684\u534F\u7A0B \u4E5F\u53EF\u4EE5\u7528\u4E8E\u663E\u5F0F\u7B49\u5F85 <code>join</code></p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> job <span class="token operator">=</span> launch <span class="token punctuation">{</span> <span class="token comment">// launch a new coroutine and keep a reference to its Job</span>
    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000L</span><span class="token punctuation">)</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;World!&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Hello&quot;</span></span><span class="token punctuation">)</span>
job<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// wait until child coroutine completes</span>
<span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Done&quot;</span></span><span class="token punctuation">)</span> 
<span class="token comment">// \u8F93\u51FA:</span>
<span class="token comment">// Hello</span>
<span class="token comment">// World!</span>
<span class="token comment">// Done</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,23);function y(w,S){const a=t("ExternalLinkIcon");return o(),c(l,null,[r,n("p",null,[n("a",k,[d,e(a)]),b]),n("p",null,[n("a",m,[h,e(a)]),g]),n("p",null,[n("a",f,[_,e(a)]),q,x]),v],64)}var j=i(u,[["render",y]]);export{j as default};
