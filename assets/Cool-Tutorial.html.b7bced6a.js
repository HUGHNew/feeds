import{r as l,o as r,c as i,a as e,b as a,F as o,e as t,d as s}from"./app.7d274c27.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const d={},p=t(`<h1 id="cool-\u5FEB\u901F\u5165\u95E8" tabindex="-1"><a class="header-anchor" href="#cool-\u5FEB\u901F\u5165\u95E8" aria-hidden="true">#</a> Cool \u5FEB\u901F\u5165\u95E8</h1><blockquote><p>cs143 Classroom Object Oriented Language</p></blockquote><blockquote><p>\u7A0B\u5E8F\u6267\u884C <code>(new Main).main()</code></p></blockquote><p>Main\u7C7B\u4E2D\u7684main\u51FD\u6570\u4E3A\u5165\u53E3</p><blockquote><p>\u5982\u679C\u7406\u89E3BNF\u7684\u8BDD \u770BCool\u7684BNF \u66F4\u597D\u7406\u89E3\u8BED\u6CD5</p></blockquote><h2 id="helloworld" tabindex="-1"><a class="header-anchor" href="#helloworld" aria-hidden="true">#</a> HelloWorld</h2><div class="language-cool ext-cool line-numbers-mode"><pre class="language-cool"><code>class Main inherits IO{
    hw:String &lt;- &quot;HelloWorld\\n&quot;; -- initialization or assignment
    hello():String{&quot;Hello&quot;}; -- define a method
    main():SELF_TYPE{ -- return type:Main
        out_string(hw)
    };
};
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u5206\u652F\u4E0E\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u5206\u652F\u4E0E\u5FAA\u73AF" aria-hidden="true">#</a> \u5206\u652F\u4E0E\u5FAA\u73AF</h2><h3 id="\u5206\u652F" tabindex="-1"><a class="header-anchor" href="#\u5206\u652F" aria-hidden="true">#</a> \u5206\u652F</h3><h4 id="if" tabindex="-1"><a class="header-anchor" href="#if" aria-hidden="true">#</a> if</h4><div class="language-cool ext-cool line-numbers-mode"><pre class="language-cool"><code>if &lt;expr:Bool&gt; then &lt;expr&gt; else &lt;expr&gt; fi
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="case" tabindex="-1"><a class="header-anchor" href="#case" aria-hidden="true">#</a> case</h4><blockquote><p>\u4E00\u79CD runtime type-check \u7684\u673A\u5236</p></blockquote><div class="language-cool ext-cool line-numbers-mode"><pre class="language-cool"><code>case &lt;expr0&gt; of
    &lt;id1&gt; : &lt;type1&gt; =&gt; &lt;expr1&gt;;
    . . .
    &lt;idn&gt; : &lt;typen&gt; =&gt; &lt;exprn&gt;;
    x : Object =&gt; {} -- same as default
esac
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u65E0\u5339\u914D\u4F1A\u62A5\u9519</p><h3 id="\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u5FAA\u73AF" aria-hidden="true">#</a> \u5FAA\u73AF</h3><div class="language-cool ext-cool line-numbers-mode"><pre class="language-cool"><code>while &lt;expr:Bool&gt; loop &lt;expr&gt; pool
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u7C7B\u578B\u4E3A Object</p><h2 id="\u6CE8\u91CA" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u91CA" aria-hidden="true">#</a> \u6CE8\u91CA</h2><div class="language-cool ext-cool line-numbers-mode"><pre class="language-cool"><code>-- line commet

(*
    block comment
    (*may be nested*)
    but can&#39;t cross file boundaries
*)
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="\u5757" tabindex="-1"><a class="header-anchor" href="#\u5757" aria-hidden="true">#</a> \u5757</h2><div class="language-cool ext-cool line-numbers-mode"><pre class="language-cool"><code>{ &lt;expr&gt;; ... &lt;expr&gt;; }
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u5757\u7684\u503C\u548C\u7C7B\u578B\u4E0E\u6700\u540E\u4E00\u4E2A\u8868\u8FBE\u5F0F\u76F8\u540C</p><p><code>;</code> \u662F\u8868\u8FBE\u5F0F\u7ED3\u675F\u7B26 \u800C\u975E\u5206\u9694\u7B26</p><p>\u4ECE\u5DE6\u5230\u53F3\u6C42\u503C</p><h2 id="let" tabindex="-1"><a class="header-anchor" href="#let" aria-hidden="true">#</a> let</h2><div class="language-cool ext-cool line-numbers-mode"><pre class="language-cool"><code>let &lt;id1&gt; : &lt;type1&gt; [ &lt;- &lt;expr1&gt; ], ..., &lt;idn&gt; : &lt;typen&gt; [ &lt;- &lt;exprn&gt; ] in &lt;expr&gt;
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u521D\u59CB\u5316\u64CD\u4F5C\u53EF\u9009(\u4F7F\u7528\u9ED8\u8BA4\u521D\u59CB\u5316)</p><p><code>let</code> \u7684\u503C\u548C\u7C7B\u578B \u4E0E body \u540C</p><p><code>let</code> \u521D\u59CB\u5316\u5217\u8868\u4E2D\u53EF\u4EE5\u591A\u6B21\u8D4B\u503C \u521D\u59CB\u5316\u5217\u8868\u4E2D <code>idn</code> \u5BF9\u4E8E <code>idn+k</code> \u53EF\u89C1<s>k\u4E3A\u6B63\u6574\u6570</s></p><h2 id="isvoid" tabindex="-1"><a class="header-anchor" href="#isvoid" aria-hidden="true">#</a> isvoid</h2><div class="language-cool ext-cool line-numbers-mode"><pre class="language-cool"><code>isvoid expr
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="\u57FA\u7840\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u7C7B" aria-hidden="true">#</a> \u57FA\u7840\u7C7B</h2><ul><li><a href="#object">Object</a></li><li><a href="#io">IO</a></li><li>Int</li><li><a href="#string">String</a></li><li>Bool</li></ul><h3 id="object" tabindex="-1"><a class="header-anchor" href="#object" aria-hidden="true">#</a> Object</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>abort() : Object
type_name() : String
copy() : SELF_TYPE -- shallow copy
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="io" tabindex="-1"><a class="header-anchor" href="#io" aria-hidden="true">#</a> IO</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>out_string(x : String) : SELF_TYPE
out_int(x : Int) : SELF_TYPE
in_string() : String
in_int() : Int
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="string" tabindex="-1"><a class="header-anchor" href="#string" aria-hidden="true">#</a> String</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>length() : Int
concat(s : String) : String
substr(i : Int, l : Int) : String
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="\u8FD0\u884C" tabindex="-1"><a class="header-anchor" href="#\u8FD0\u884C" aria-hidden="true">#</a> \u8FD0\u884C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>coolc hello.cl <span class="token comment"># compile to MIPS assembly</span>
spim hello.s <span class="token comment"># run the assembly</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,43),b={href:"https://web.stanford.edu/class/cs143/materials/cool-manual.pdf",target:"_blank",rel:"noopener noreferrer"},u=s("Cool \u624B\u518C"),h={href:"https://web.stanford.edu/class/cs143/materials/cool-tour.pdf",target:"_blank",rel:"noopener noreferrer"},m=s("Cool Tour");function g(x,v){const n=l("ExternalLinkIcon");return r(),i(o,null,[p,e("ul",null,[e("li",null,[e("a",b,[u,a(n)])]),e("li",null,[e("a",h,[m,a(n)])])])],64)}var k=c(d,[["render",g]]);export{k as default};
